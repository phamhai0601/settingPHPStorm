{"id":54647,"xmlId":"Shifter","name":"Shifter","description":"\n    String and code manipulations, performed on keyboard shortcut with detection of intended manipulation.\n    The type of manipulation only has to be selected manually when multiple are possible.<br>\n    <br>\n    Do you like it? Give it a star at <a href=\"https://github.com/kstenschke/shifter-plugin\">GitHub</a>.\n    Rate it at <a href=\"https://plugins.jetbrains.com/plugin/6149-shifter\">plugins.jetbrains.com</a>.<br>\n    There's no future for Shifter without support from the community!<br>\n    <br>\n    When evoked, Shifter detects the type of selection (or lets the user chose when ambiguous) in the current line or\n    keyword at the caret and performs the possible string manipulation.\n    <br>\n    If there's only one shiftable word in a line, it can be shifted without the caret touching it.\n    Lowercase/uppercase or lower case with upper first character within shifted words is maintained.<br>\n    <br>\n    <strong>DEFAULT KEYBOARD SHORTCUTS</strong>\n    <ul>\n        <li>Ctrl+Shift+Alt+Comma  - Shift Down</li>\n        <li>Ctrl+Shift+Alt+Period - Shift Up</li>\n        <li>Ctrl+Shift+Alt+K - Shift Up More*</li>\n        <li>Ctrl+Shift+Alt+J - Shift Down More*</li>\n    </ul>\n    Shift more: repeats shifting a value multiple times. The amount of repetitions can be configured in the plugin configuration (default: 10).\n    <br><br>\n    <strong>Mac Users:</strong>\n    On Macs, the keyboard shortcuts are Comma or Period key together with Shift+Alt+Cmd\n    <br><br>\n    <strong>SHIFTING TYPES</strong>\n    <br>\n    <strong>Sorting</strong>\n    <ul>\n        <li>Shifting a multi-line selection sorts the lines alphabetically ascending/descending.</li>\n        <li>Shifting a single-line selection, that is a comma- or pipe-separated list, sorts the items ascending/descending.</li>\n        <li>Shifting a single-line selection, that is XML attribute-value pairs, sorts them alphabetically.</li>\n        <li>Shifting a single-line selection, that is a tupel, flips the items' order (delimiters: \":\", \"|\", \", \", \" - \", \" + \", \" &lt; \", \" &gt; \", \" &lt;= \", \" &gt;= \", \" == \", \" != \", \" === \", \" !== \", \" || \")</li>\n        <li>Shifting a selection that is a camelCased (w/ lower or upper lead character) word pair, flips the order of the words.</li>\n        <li>Shifting a selected AND &amp;&amp; or OR || logical conjunction with two operands, swaps the operands' order</li>\n        <li>Shifting a selected (from questionmark on) ternary expression, swaps \"than\" and \"else\" statements</li>\n        <li>Shifting a selected PHP concatenation from two strings / variables, toggles the concatenated items' order</li>\n        <li>Shifting a selection from a CSS file, sorts all attributes inside their selectors (alphabetically, vendor-attributes and vendor-styles at the end)</li>\n        <li>Shifting selected attribute-style lines inside a CSS (or LESS or SASS) file, sorts them (alphabetically, vendor-attributes and vendor-styles at the end)</li>\n    </ul>\n    <strong>Numeric Shifting</strong>\n    <ul>\n        <li>Numeric values - Incrementing/decrementing numbers</li>\n        <li>Strings ending with numbers - increments/decrements the postfix</li>\n        <li>Numeric block selection: opens dialog to chose: 1. in/decrement each or: 2. replace by enumeration</li>\n        <li>UNIX (and millisecond based) timestamps - Increments/decrements by one day, shows a balloon info with the shifted date in human-readable format</li>\n        <li>CSS hex RGB colors - Shifts color value lighter/darker</li>\n        <li>CSS length values - Shifts numeric length values up/down by 1 (units: em, in, px, pt, cm, rem, vw, vh, vmin, vmax)</li>\n        <li>Increment/decrement roman numerals</li>\n    </ul>\n    <strong>String Manipulations</strong>\n    <ul>\n        <li>Shifting a selection within a single line: detects and swaps characters: single quote vs. double quote OR slash vs. backslash</li>\n        <li>Shifting a selected (or the caret touching a) camel-cased string, converts it into a minus- or underscore-separated path (and vice versa)</li>\n        <li>Strings wrapped in single/double quotes and backticks - Shifts to alphabetically next/previous quoted string found in current document</li>\n        <li>Parenthesis: Strings surrounded by round, square or curly brackets: toggles surrounding \"(\" and \")\" to \"[\" and \"]\" to \"{\" and \"}\"</li>\n        <li>Logical operators: toggles between (selected) \"&amp;&amp;\" and \"||\"</li>\n        <li>HTML en/decoding of selected special characters</li>\n        <li>Single characters and string consisting from any amount of the same character can be shifted to the previous/next ASCII value</li>\n        <li>Escaped single or double quotes can be unescaped when shifting a selection</li>\n    </ul>\n    <strong>Code- and DOC Comments</strong>\n    <ul>\n        <li>Selection which is a block comment or multiple line-comments (e.g. PHP, JavaScript, C syntax) - toggle among comment type (//... vs. /*...*/). Merges multi-line comments into 1 line.</li>\n        <li>Selected line of code ending with a trailing //-comment - Moves the comment into a new line before the code</li>\n        <li>Selected HTML comment inside a PHP / PHTML file: converts it into a PHP block comment (and vice versa)</li>\n        <li>PHPDoc: Shifting a selected PHP doc comment block that contains @param comments w/ variable name but no data type, guesses and inserts data types</li>\n        <li>PHPDoc: Shifting while the caret is inside an @param annotation that contains no data type, inserts a data type (guessed from the variable name)</li>\n        <li>JsDOC: Shifting w/ the caret touching a data type that is not wrapped in curly brackets, inside an \"@param\", \"@returns\" or \"@type\" annotation: adds the missing curly brackets</li>\n        <li>Selected JsDoc block: Convert \"@return\" into \"@returns\", add missing curly brackets around data types in \"@param\", \"@returns\" and \"@type\" lines, correct invalid data types into existing data types (bool =&gt; boolean, int(eger) =&gt; number), reduce empty JsDoc lines</li>\n    </ul>\n    <strong>PHP, JavaScript and TypeScript shifting</strong>\n    <ul>\n        <li>PHP variables - Shifts to alphabetically next/previous variable found in current document (\"shift more\" shifts until first variable with a different first letter)</li>\n        <li>Selected PHP array - Shifts among long and shorthand syntax (PHP &gt;= 5.4)</li>\n        <li>Selection which is a Sizzle-Selector - Converts the selector into a corresponding JavaScript variable declaration</li>\n        <li>Selection of multiple JavaScript var declarations in succession - are joined into multiple comma-separated declarations</li>\n        <li>Selected deprecated jQuery observer methods are modernized, e.g. \".click(\" becomes \".on('click', \": Event types: blur, change, click, dblclick, error, focus, keypress, keydown, keyup, load, mouseenter, mouseleave, resize, submit, scroll, unload</li>\n        <li>Selected JavaScript string concatenation in TypeScript file - Converts to TypeScript string interpolation</li>\n    </ul>\n    <strong>Dictionaric Keyword Shifting</strong>\n    <br>\n    Shifter comes with a customizable, file extension specific and globally usable dictionary of shiftable keywords.\n    Some keyword types from the default dictionary:<br>\n    <ul>\n        <li>PHP core magical constants - Shifts PHP's magic constants (__FILE__/__LINE__ etc.)</li>\n        <li>CSS orientations and positioning: top/right/bottom/left and absolute/relative, and geographical directions (north/east/south/west)</li>\n        <li>Accessibility types: public/private/protected</li>\n        <li>MySql data types: Shifts to next bigger/smaller numeric/string type</li>\n        <li>Primitive data types of Java, JavaScript, PHP, Objective-C</li>\n        <li>Doc comment tags (Java, JavaScript, PHP)</li>\n        <li>JavaScript event types (mouse, keyboard, frame/object, form, control, touch)</li>\n        <li>Named colors from the sRGB color space (white/lightgray/gray...)</li>\n        <li>Text styles (bold, italic...)</li>\n        <li>Web image (gif/jpg/png) and audio (au/aif/wav etc.) format extensions</li>\n        <li>Full and abbreviated names of months and weekdays and units of time</li>\n        <li>Logical operators (and/or/xor/not), arithmetic operations (addition/subtraction...) and arithmetic elements (sum/difference/product..)</li>\n        <li>Meta-syntax terms: foo/bar/baz...</li>\n        <li>Names of common data collection types (list/set/bag/dictionary/tree...)</li>\n        <li>Names of numbers (one/two/three etc.) and ordinal numbers (first/second/third  etc.)\n        </li><li>Boolean (paired) keyword values - Toggles true/false, on/off, yes/no (e.g. Objective-C), shown/hidden, show/hide, positive/negative, from/until, enable(d)/disable(d), pass/fail, min/max, expand/collapse, asc/desc, first/last\n        </li>\n    </ul>\n    <br>\n    <strong>Tip: Using Mouse Wheel</strong>\n    <br>\n    To setup the mouse wheel to invoke shifting, open the IDE preferences and go to: “Keymap”.\n    Search for “Shift”, than right-click the shifter action items and use the option “Add mouse shortcut”.\n    Mouse shortcuts can include hotkeys, this way for instance “Shift + Wheel Up” can be assigned to “Shift-Up”,\n    “Shift + Wheel Down” to “Shift-Down”.\n    <br><br>\n    Please note: This plugin is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ","tags":["Code tools"],"vendor":"Kay Stenschke","version":"1.9.6","notes":"\n    <ul>\n        <li>1.9.6\n            <ul>\n                <li>Improved: Shift multiple successive JavaScript variable declarations now also shifts const and let scopes into comma-separated declarations</li>\n            </ul>\n        </li><li>1.9.5\n            <ul>\n                <li>Added: Intention popup when shifted selection is comma-separated items and string concatenation (= sort or interpolate)</li>\n                <li>Improved: Minor performance improvements</li>\n            </ul>\n        </li><li>1.9.4\n            <ul>\n                <li>Added: Shifting selected string concatenation in TypeScript file converts it to string interpolation</li>\n                <li>Improved: Minor performance improvements</li>\n            </ul>\n        </li>\n    </ul>\n    <br>\n    <a href=\"https://github.com/kstenschke/shifter-plugin/blob/master/CHANGELOG.textile\">...Read full changelog on github</a>\n  ","dependencies":["com.intellij.modules.lang"],"since":"13.17","sourceCodeUrl":"https://github.com/kstenschke/shifter-plugin","size":187859,"url":"https://plugins.jetbrains.com/idea/plugin/6149"}